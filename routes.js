// Generated by CoffeeScript 1.3.3
(function() {

  module.exports = function(app, vimeoConnect, async, db) {
    app.get('/', function(req, res, next) {
      return res.render('index', {
        title: 'Hello World!'
      });
    });
    app.get('/vimeo', function(req, res) {
      return vimeoConnect.requestToken(function(response) {
        req.session.token = response.token;
        req.session.token_secret = response.oauth_token_secret;
        return res.redirect(response.redirect);
      });
    });
    app.get('/auth', function(req, res) {
      var params;
      params = {
        token: req.query.oauth_token,
        verifier: req.query.oauth_verifier
      };
      params.token_secret = req.session.token_secret;
      return vimeoConnect.getAccToken(params, function(response) {
        req.session.token = {
          token: response.oauth_token,
          token_secret: response.oauth_token_secret
        };
        req.session.token_secret = response.oauth_token_secret;
        params = req.session;
        return vimeoConnect.getUserInfo(req.session.token, function(response) {
          req.session.user = response.person;
          return res.redirect('/sign-up');
        });
      });
    });
    app.get('/sign-up', function(req, res) {
      return res.render('signup', {
        user: req.session.user
      });
    });
    app.post('/check-username', function(req, res) {
      var username;
      username = req.body.user_name;
      return db.users.findOne({
        user_name: username
      }, function(err, response) {
        if (response === null) {
          return res.send("free");
        } else {
          return res.send("taken");
        }
      });
    });
    app.post('/new-user', function(req, res) {
      var user;
      user = req.session.user;
      user.user_name = req.body.user_name;
      return db.users.save(user, function(err) {
        if (err) {
          throw err;
        }
        return res.send("user sent ok");
      });
    });
    app.post('/color-choice', function(req, res) {
      var color, id;
      color = req.body.color;
      console.log(color);
      id = {
        id: req.session.user.id
      };
      return db.users.update(id, {
        $set: {
          color: color
        }
      }, function(err) {
        var username;
        if (err) {
          throw err;
        }
        console.log("added color");
        username = req.session.user.user_name;
        return res.send("ok");
      });
    });
    app.get('/sync', function(req, res) {
      var getThumbnailUrls, thumbnails, token;
      console.log(req.session.token);
      token = {
        token: 'cf5c00fb4f410f44870c904ed069ab11',
        token_secret: '7b3e445a49f2ed44edbe39ef549918fa243d69b0',
        consumer_key: 'b62d75bf5a4e0b0e5ae27acc9cae476e7000d0c5',
        consumer_secret: '9e14fd99e7852a313685ed9a057b0c4d2a2bf4f5'
      };
      thumbnails = [];
      vimeoConnect.getAllVideos(token, function(response) {
        var i, video, _i, _len, _ref, _results;
        _ref = response.videos.video;
        _results = [];
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          video = _ref[i];
          _results.push(getThumbnailUrls(token, video.id));
        }
        return _results;
      });
      return getThumbnailUrls = function(token, id) {
        return vimeoConnect.getThumbnailUrls(token, id, function(response) {
          return thumbnails.push(response.thumbnails);
        });
      };
    });
    return app.get('/:username', function(req, res) {
      var username;
      if (req.url === '/favicon.ico') {
        res.writeHead(200, {
          'Content-Type': 'image/x-icon'
        });
        res.end();
        return console.log('favicon requested');
      } else {
        username = req.url.substr(1);
        return db.users.findOne({
          user_name: username
        }, function(err, response) {
          return res.render('user', {
            user: response
          });
        });
      }
    });
  };

}).call(this);
